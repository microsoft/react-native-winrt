# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-2019'

stages:
  - stage: Build
    displayName: Build ðŸ”¨
    jobs:
      - job: Build
        steps:
          - task: NuGetToolInstaller@1

          - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
            inputs:
              command: 'restore'
              restoreSolution: 'rnwinrt\rnwinrt.sln'
              feedsToUse: 'config'
              nugetConfigPath: ''

          - task: VSBuild@1
            displayName: 'Build solution rnwinrt.sln'
            inputs:
              solution: rnwinrt\rnwinrt.sln
              vsVersion: 'latest'
              platform: 'x64'
              configuration: 'Release'

          - task: EsrpCodeSigning@1
            displayName: 'ESRP CodeSigning'
            inputs:
              ConnectedServiceName: 'Xlang Code Signing'
              FolderPath: '$(Build.SourcesDirectory)\rnwinrt\x64\Release'
              Pattern: 'rnwinrt.exe'
              UseMinimatch: true
              signConfigType: 'inlineSignParams'
              SessionTimeout: '60'
              MaxConcurrency: '50'
              MaxRetryAttempts: '5'

          - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
            inputs:
              command: 'pack'
              packagesToPack: 'rnwinrt/nuget/Microsoft.Windows.JsWinRT.nuspec'
              configuration: 'Release'
              packDestination: '$(Build.ArtifactStagingDirectory)'
              versioningScheme: 'off'
              buildProperties: 'jswinrt_nuget_version=$(Build.BuildNumber);rnwinrt_exe=$(Build.SourcesDirectory)\rnwinrt\x64\Release\rnwinrt.exe;reactnative_files=$(Build.SourcesDirectory)\rnwinrt\module'

          - task: EsrpCodeSigning@1
            displayName: 'ESRP CodeSigning'
            inputs:
              ConnectedServiceName: 'Xlang Code Signing'
              FolderPath: '$(Build.ArtifactStagingDirectory)'
              Pattern: '*.nupkg'
              UseMinimatch: true
              signConfigType: 'inlineSignParams'
              inlineOperation: |
                [
                  {
                    "KeyCode" : "CP-401405",
                    "OperationCode" : "NuGetSign",
                    "Parameters" : {},
                    "ToolName" : "sign",
                    "ToolVersion" : "1.0"
                  },
                  {
                      "KeyCode" : "CP-401405",
                      "OperationCode" : "NuGetVerify",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  }
                ]
              SessionTimeout: '60'
              MaxConcurrency: '50'
              MaxRetryAttempts: '5'

  - stage: Tests
    displayName: Tests ðŸ§ª
    dependsOn: Build
    jobs:
      - template: tests/e2e-test.yml
        parameters:
          buildEnvironment: PullRequest

  - stage: Publish
    displayName: Publish
    dependsOn: Tests
    jobs:
      - job: Publish
        steps:
          - task: 333b11bd-d341-40d9-afcf-b32d5ce6f23b@2
            inputs:
              command: 'push'
              packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
              nuGetFeedType: 'internal'
              publishVstsFeed: 'JsWinRT'
