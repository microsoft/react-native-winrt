
// NOTE: The majority of this is derived from https://github.com/microsoft/TestWinRT. The implementation has diverged,
// however because (1) these tests were added in the early phases of development, and (2) the TestWinRT project does not
// cover several scenarios that are interesting to JavaScript.

namespace TestComponent
{
    [contractversion(10)]
    apicontract TestContract {};

    [contract(TestContract, 1)]
    enum TestEnum
    {
        First = 1,
        Second = 2,
        Third = 3,
        Fourth = 4,
    };

    // All of these are represented as a 'number' in JavaScript
    [contract(TestContract, 1)]
    struct NumericTypes
    {
        UInt8 u8;
        UInt16 u16;
        UInt32 u32;
        UInt64 u64;
        Int16 s16;
        Int32 s32;
        Int64 s64;
        Single f32;
        Double f64;
        TestEnum e;

        // TODO: IReference here and elsewhere? Or as its own?
    };

    // All of these are represented as 'string' in JavaScript
    [contract(TestContract, 1)]
    struct StringTypes
    {
        Char ch;
        String str;
        Guid guid;
    };

    // All of these are represented as 'boolean' in JavaScript
    [contract(TestContract, 1)]
    struct BooleanTypes
    {
        Boolean b;
    };

    [contract(TestContract, 1)]
    struct CompositeType
    {
        NumericTypes numerics;
        StringTypes strings;
        BooleanTypes bools;
    };

    // Delegates
    // TODO: Error if argument is named 'value' & has a return value - https://github.com/microsoft/jswinrt/issues/15
    delegate Boolean BoolDelegate(Boolean inputValue);
    delegate Char CharDelegate(Char inputValue);
    delegate Int32 NumericDelegate(Int32 inputValue);
    delegate String StringDelegate(String inputValue);
    delegate Guid GuidDelegate(Guid inputValue);
    delegate TestEnum EnumDelegate(TestEnum inputValue);
    delegate CompositeType CompositeStructDelegate(CompositeType inputValue);
    delegate Windows.Foundation.IReference<Int32> RefDelegate(Windows.Foundation.IReference<Int32> inputValue);
    delegate Windows.Foundation.Collections.IVector<Int32> ObjectDelegate(Windows.Foundation.Collections.IVector<Int32> inputValue);

    // Delegates with out params
    delegate void BoolDelegateWithOutParam(Boolean inputValue, out Boolean outValue);
    delegate void CharDelegateWithOutParam(Char inputValue, out Char outValue);
    delegate void NumericDelegateWithOutParam(Int32 inputValue, out Int32 outValue);
    delegate void StringDelegateWithOutParam(String inputValue, out String outValue);
    delegate void GuidDelegateWithOutParam(Guid inputValue, out Guid outValue);
    delegate void EnumDelegateWithOutParam(TestEnum inputValue, out TestEnum outValue);
    delegate void CompositeStructDelegateWithOutParam(CompositeType inputValue, out CompositeType outValue);
    delegate void RefDelegateWithOutParam(Windows.Foundation.IReference<Int32> inputValue, out Windows.Foundation.IReference<Int32> outValue);
    delegate void ObjectDelegateWithOutParam(Windows.Foundation.Collections.IVector<Int32> inputValue, out Windows.Foundation.Collections.IVector<Int32> outValue);

    [contract(TestContract, 1)]
    runtimeclass Test
    {
        // Constructors
        Test();

        // Infra helpers
        static void LogFailures(String failures);

        // Static properties
        static Boolean StaticBoolProperty;
        // TODO: More, but static properties don't seem to work

        // Static array properties

        // Static functions
        static Boolean StaticOr(Boolean lhs, Boolean rhs);
        static Boolean StaticOrAll(Boolean[] values);
        static Int32 StaticAdd(Int32 lhs, Int32 rhs);
        static Int32 StaticAddAll(Int32[] values);
        static String StaticAppend(String a, Char b, String c);
        static String StaticAppendAll(String[] values);

        // Static out params
        static Boolean StaticBoolOutParam(Boolean lhs, Boolean rhs, out Boolean andResult, out Boolean orResult);
        static Char StaticCharOutParam(Char value, out Char next, out Char prev);
        static Int32 StaticNumericOutParam(Int32 value, out Int32 doubledValue, out Int32 tripledValue);
        static String StaticStringOutParam(String value, out String lower, out String upper);
        static Guid StaticGuidOutParam(Guid value, out Guid zero, out Guid allSet);
        static TestEnum StaticEnumOutParam(TestEnum value, out TestEnum plusOne, out TestEnum plusTwo);
        static CompositeType StaticCompositeStructOutParam(CompositeType input, out CompositeType first, out CompositeType second);
        static Windows.Foundation.IReference<Int32> StaticRefOutParam(
            Windows.Foundation.IReference<Int32> value,
            out Windows.Foundation.IReference<Int32> doubledValue,
            out Windows.Foundation.IReference<Int32> tripledValue);
        static Windows.Foundation.Collections.IVector<Int32> StaticObjectOutParam(
            Windows.Foundation.Collections.IVector<Int32> values,
            out Windows.Foundation.Collections.IVector<Int32> doubledValues,
            out Windows.Foundation.Collections.IVector<Int32> tripledValues);

        // Static array out params
        static Boolean[] StaticBoolArrayOutParam(Boolean[] values, out Boolean[] rot1, out Boolean[] rot2);
        static Char[] StaticCharArrayOutParam(Char[] values, out Char[] rot1, out Char[] rot2);
        static Int32[] StaticNumericArrayOutParam(Int32[] values, out Int32[] rot1, out Int32[] rot2);
        static String[] StaticStringArrayOutParam(String[] values, out String[] rot1, out String[] rot2);
        static Guid[] StaticGuidArrayOutParam(Guid[] values, out Guid[] rot1, out Guid[] rot2);
        static TestEnum[] StaticEnumArrayOutParam(TestEnum[] values, out TestEnum[] rot1, out TestEnum[] rot2);
        static CompositeType[] StaticCompositeStructArrayOutParam(CompositeType[] values, out CompositeType[] rot1, out CompositeType[] rot2);
        // TODO: Ref array
        static Windows.Foundation.Collections.IVector<Int32>[] StaticObjectArrayOutParam(
            Windows.Foundation.Collections.IVector<Int32>[] values,
            out Windows.Foundation.Collections.IVector<Int32>[] rot1,
            out Windows.Foundation.Collections.IVector<Int32>[] rot2);

        // Static array fill params
        static void StaticBoolFillParam(ref Boolean[] values);
        static void StaticCharFillParam(ref Char[] values);
        static void StaticNumericFillParam(ref Int32[] values);
        static void StaticStringFillParam(ref String[] values);
        static void StaticGuidFillParam(ref Guid[] values);
        static void StaticEnumFillParam(ref TestEnum[] values);
        static void StaticCompositeStructFillParam(ref CompositeType[] values);
        // TODO: Ref
        static void StaticObjectFillParam(ref Windows.Foundation.Collections.IVector<Int32>[] values);

        // Static events
        static event Windows.Foundation.EventHandler<Boolean> StaticBoolEventHandler;
        static event Windows.Foundation.EventHandler<Char> StaticCharEventHandler;
        static event Windows.Foundation.EventHandler<Int32> StaticNumericEventHandler;
        static event Windows.Foundation.EventHandler<String> StaticStringEventHandler;
        static event Windows.Foundation.EventHandler<Guid> StaticGuidEventHandler;
        static event Windows.Foundation.EventHandler<TestEnum> StaticEnumEventHandler;
        static event Windows.Foundation.EventHandler<CompositeType> StaticCompositeStructEventHandler;
        static event Windows.Foundation.EventHandler<Windows.Foundation.IReference<Int32> > StaticRefEventHandler;
        static event Windows.Foundation.EventHandler<Windows.Foundation.Collections.IVector<Int32> > StaticObjectEventHandler;

        // Static event triggers
        static void RaiseStaticBoolEvent(Boolean value);
        static void RaiseStaticCharEvent(Char value);
        static void RaiseStaticNumericEvent(Int32 value);
        static void RaiseStaticStringEvent(String value);
        static void RaiseStaticGuidEvent(Guid value);
        static void RaiseStaticEnumEvent(TestEnum value);
        static void RaiseStaticCompositeStructEvent(CompositeType value);
        static void RaiseStaticRefEvent(Windows.Foundation.IReference<Int32> value);
        static void RaiseStaticObjectEvent(Windows.Foundation.Collections.IVector<Int32> value);

        // Static delegate invocation
        static Boolean StaticInvokeBoolDelegate(Boolean inputValue, BoolDelegate targetFn);
        static Char StaticInvokeCharDelegate(Char inputValue, CharDelegate targetFn);
        static Int32 StaticInvokeNumericDelegate(Int32 inputValue, NumericDelegate targetFn);
        static String StaticInvokeStringDelegate(String inputValue, StringDelegate targetFn);
        static Guid StaticInvokeGuidDelegate(Guid inputValue, GuidDelegate targetFn);
        static TestEnum StaticInvokeEnumDelegate(TestEnum inputValue, EnumDelegate targetFn);
        static CompositeType StaticInvokeCompositeStructDelegate(CompositeType inputValue, CompositeStructDelegate targetFn);
        static Windows.Foundation.IReference<Int32> StaticInvokeRefDelegate(Windows.Foundation.IReference<Int32> inputValue, RefDelegate targetFn);
        static Windows.Foundation.Collections.IVector<Int32> StaticInvokeObjectDelegate(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegate targetFn);

        /* TODO: Delegates with out params currently cause compilation errors - https://github.com/microsoft/jswinrt/issues/16
        static Boolean StaticInvokeBoolDelegateWithOutParam(Boolean inputValue, BoolDelegateWithOutParam targetFn);
        static Char StaticInvokeCharDelegateWithOutParam(Char inputValue, CharDelegateWithOutParam targetFn);
        static Int32 StaticInvokeNumericDelegateWithOutParam(Int32 inputValue, NumericDelegateWithOutParam targetFn);
        static String StaticInvokeStringDelegateWithOutParam(String inputValue, StringDelegateWithOutParam targetFn);
        static Guid StaticInvokeGuidDelegateWithOutParam(Guid inputValue, GuidDelegateWithOutParam targetFn);
        static TestEnum StaticInvokeEnumDelegateWithOutParam(TestEnum inputValue, EnumDelegateWithOutParam targetFn);
        static CompositeType StaticInvokeCompositeStructDelegateWithOutParam(CompositeType inputValue, CompositeStructDelegateWithOutParam targetFn);
        static Windows.Foundation.IReference<Int32> StaticInvokeRefDelegateWithOutParam(
            Windows.Foundation.IReference<Int32> inputValue,
            RefDelegateWithOutParam targetFn);
        static Windows.Foundation.Collections.IVector<Int32> StaticInvokeObjectDelegateWithOutParam(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegateWithOutParam targetFn);
        */

        // Copy array to IVector
        static Windows.Foundation.Collections.IVector<Boolean> CopyBoolsToVector(Boolean[] values);
        static Windows.Foundation.Collections.IVector<Char> CopyCharsToVector(Char[] values);
        static Windows.Foundation.Collections.IVector<Int32> CopyNumericsToVector(Int32[] values);
        static Windows.Foundation.Collections.IVector<String> CopyStringsToVector(String[] values);
        static Windows.Foundation.Collections.IVector<Guid> CopyGuidsToVector(Guid[] values);
        static Windows.Foundation.Collections.IVector<TestEnum> CopyEnumValuesToVector(TestEnum[] values);
        static Windows.Foundation.Collections.IVector<CompositeType> CopyCompositeStructsToVector(CompositeType[] values);
        static Windows.Foundation.Collections.IVector<Windows.Foundation.IReference<Int32> > CopyRefsToVector(
            Windows.Foundation.IReference<Int32>[] values);
        static Windows.Foundation.Collections.IVector<Object> CopyObjectsToVector(Object[] values);

        // Convert array to IVector
        static Windows.Foundation.Collections.IVector<Boolean> ReturnSameBoolVector(Windows.Foundation.Collections.IVector<Boolean> vector);
        static Windows.Foundation.Collections.IVector<Char> ReturnSameCharVector(Windows.Foundation.Collections.IVector<Char> vector);
        static Windows.Foundation.Collections.IVector<Int32> ReturnSameNumericVector(Windows.Foundation.Collections.IVector<Int32> vector);
        static Windows.Foundation.Collections.IVector<String> ReturnSameStringVector(Windows.Foundation.Collections.IVector<String> vector);
        static Windows.Foundation.Collections.IVector<Guid> ReturnSameGuidVector(Windows.Foundation.Collections.IVector<Guid> vector);
        static Windows.Foundation.Collections.IVector<TestEnum> ReturnSameEnumVector(Windows.Foundation.Collections.IVector<TestEnum> vector);
        static Windows.Foundation.Collections.IVector<CompositeType> ReturnSameCompositeStructVector(Windows.Foundation.Collections.IVector<CompositeType> vector);
        static Windows.Foundation.Collections.IVector<Windows.Foundation.IReference<Int32> > ReturnSameRefVector(
            Windows.Foundation.Collections.IVector<Windows.Foundation.IReference<Int32> > vector);
        static Windows.Foundation.Collections.IVector<Object> ReturnSameObjectVector(Windows.Foundation.Collections.IVector<Object> vector);

        // Async
        static Windows.Foundation.IAsyncAction PauseAsync(Int32 milliseconds);
        static Windows.Foundation.IAsyncActionWithProgress<Int32> CountToNumberAsync(Int32 value);
        static Windows.Foundation.IAsyncOperation<Int32> AddAsync(Int32 lhs, Int32 rhs);
        static Windows.Foundation.IAsyncOperationWithProgress<Int32, Int32> CountDoubleAsync(Int32 value);
        static Windows.Foundation.IAsyncAction ThrowAsyncException();

        // Member properties
        Boolean BoolProperty;
        Char CharProperty;
        UInt8 U8Property;
        UInt16 U16Property;
        UInt32 U32Property;
        UInt64 U64Property;
        Int16 S16Property;
        Int32 S32Property;
        Int64 S64Property;
        Single F32Property;
        Double F64Property;
        String StringProperty;
        Guid GuidProperty;
        TestEnum EnumProperty;
        NumericTypes NumericsStructProperty;
        StringTypes StringsStructProperty;
        BooleanTypes BooleansStructProperty;
        CompositeType CompositeStructProperty;
        Windows.Foundation.IReference<Boolean> RefBooleanProperty;
        Windows.Foundation.IReference<Char> RefCharProperty;
        Windows.Foundation.IReference<Int32> RefNumericProperty;
        Windows.Foundation.IReference<TestEnum> RefEnumProperty;
        Windows.Foundation.Collections.IVector<Int32> ObjectProperty;
        Windows.Foundation.DateTime DateTimeProperty;
        String DateTimePropertyCppValue();
        Windows.Foundation.TimeSpan TimeSpanProperty;
        String TimeSpanPropertyCppValue();
        HRESULT HResultProperty;
        Windows.Foundation.IPropertyValue PropertyValue;

        // Member array properties
        Boolean[] BooleanArrayProperty;
        Char[] CharArrayProperty;
        Int32[] NumericArrayProperty;
        String[] StringArrayProperty;
        Guid[] GuidArrayProperty;
        TestEnum[] EnumArrayProperty;
        CompositeType[] CompositeStructArrayProperty;
        // TODO: Causes compilation errors in jswinrt: https://github.com/microsoft/jswinrt/issues/9
        // Windows.Foundation.IReference<Int32>[] RefArrayProperty;
        Windows.Foundation.Collections.IVector<Int32>[] ObjectArrayProperty;

        // Member functions
        Boolean Or(Boolean lhs, Boolean rhs);
        Boolean OrAll(Boolean[] values);
        Int32 Add(Int32 lhs, Int32 rhs);
        Int32 AddAll(Int32[] values);
        String Append(String a, Char b, String c);
        String AppendAll(String[] values);

        // Member out params
        Boolean BoolOutParam(Boolean lhs, Boolean rhs, out Boolean andResult, out Boolean orResult);
        Char CharOutParam(Char value, out Char next, out Char prev);
        Int32 NumericOutParam(Int32 value, out Int32 doubledValue, out Int32 tripledValue);
        String StringOutParam(String value, out String lower, out String upper);
        Guid GuidOutParam(Guid value, out Guid zero, out Guid allSet);
        TestEnum EnumOutParam(TestEnum value, out TestEnum plusOne, out TestEnum plusTwo);
        CompositeType CompositeStructOutParam(CompositeType input, out CompositeType first, out CompositeType second);
        Windows.Foundation.IReference<Int32> RefOutParam(
            Windows.Foundation.IReference<Int32> value,
            out Windows.Foundation.IReference<Int32> doubledValue,
            out Windows.Foundation.IReference<Int32> tripledValue);
        Windows.Foundation.Collections.IVector<Int32> ObjectOutParam(
            Windows.Foundation.Collections.IVector<Int32> values,
            out Windows.Foundation.Collections.IVector<Int32> doubledValues,
            out Windows.Foundation.Collections.IVector<Int32> tripledValues);

        // Member array out params
        Boolean[] BoolArrayOutParam(Boolean[] values, out Boolean[] rot1, out Boolean[] rot2);
        Char[] CharArrayOutParam(Char[] values, out Char[] rot1, out Char[] rot2);
        Int32[] NumericArrayOutParam(Int32[] values, out Int32[] rot1, out Int32[] rot2);
        String[] StringArrayOutParam(String[] values, out String[] rot1, out String[] rot2);
        Guid[] GuidArrayOutParam(Guid[] values, out Guid[] rot1, out Guid[] rot2);
        TestEnum[] EnumArrayOutParam(TestEnum[] values, out TestEnum[] rot1, out TestEnum[] rot2);
        CompositeType[] CompositeStructArrayOutParam(CompositeType[] values, out CompositeType[] rot1, out CompositeType[] rot2);
        Windows.Foundation.Collections.IVector<Int32>[] ObjectArrayOutParam(
            Windows.Foundation.Collections.IVector<Int32>[] values,
            out Windows.Foundation.Collections.IVector<Int32>[] rot1,
            out Windows.Foundation.Collections.IVector<Int32>[] rot2);

        // Member array fill params
        void BoolFillParam(ref Boolean[] values);
        void CharFillParam(ref Char[] values);
        void NumericFillParam(ref Int32[] values);
        void StringFillParam(ref String[] values);
        void GuidFillParam(ref Guid[] values);
        void EnumFillParam(ref TestEnum[] values);
        void CompositeStructFillParam(ref CompositeType[] values);
        // TODO: Ref
        void ObjectFillParam(ref Windows.Foundation.Collections.IVector<Int32>[] values);

        // Member events
        event Windows.Foundation.EventHandler<Boolean> BoolEventHandler;
        event Windows.Foundation.EventHandler<Char> CharEventHandler;
        event Windows.Foundation.EventHandler<Int32> NumericEventHandler;
        event Windows.Foundation.EventHandler<String> StringEventHandler;
        event Windows.Foundation.EventHandler<Guid> GuidEventHandler;
        event Windows.Foundation.EventHandler<TestEnum> EnumEventHandler;
        event Windows.Foundation.EventHandler<CompositeType> CompositeStructEventHandler;
        event Windows.Foundation.EventHandler<Windows.Foundation.IReference<Int32> > RefEventHandler;
        event Windows.Foundation.EventHandler<Windows.Foundation.Collections.IVector<Int32> > ObjectEventHandler;

        // Member event triggers
        void RaiseBoolEvent(Boolean value);
        void RaiseCharEvent(Char value);
        void RaiseNumericEvent(Int32 value);
        void RaiseStringEvent(String value);
        void RaiseGuidEvent(Guid value);
        void RaiseEnumEvent(TestEnum value);
        void RaiseCompositeStructEvent(CompositeType value);
        void RaiseRefEvent(Windows.Foundation.IReference<Int32> value);
        void RaiseObjectEvent(Windows.Foundation.Collections.IVector<Int32> value);

        // Member delegate invocation
        Boolean InvokeBoolDelegate(Boolean inputValue, BoolDelegate targetFn);
        Char InvokeCharDelegate(Char inputValue, CharDelegate targetFn);
        Int32 InvokeNumericDelegate(Int32 inputValue, NumericDelegate targetFn);
        String InvokeStringDelegate(String inputValue, StringDelegate targetFn);
        Guid InvokeGuidDelegate(Guid inputValue, GuidDelegate targetFn);
        TestEnum InvokeEnumDelegate(TestEnum inputValue, EnumDelegate targetFn);
        CompositeType InvokeCompositeStructDelegate(CompositeType inputValue, CompositeStructDelegate targetFn);
        Windows.Foundation.IReference<Int32> InvokeRefDelegate(Windows.Foundation.IReference<Int32> inputValue, RefDelegate targetFn);
        Windows.Foundation.Collections.IVector<Int32> InvokeObjectDelegate(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegate targetFn);
    }
}
