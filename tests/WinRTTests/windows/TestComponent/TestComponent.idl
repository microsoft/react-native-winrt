
// NOTE: The majority of this is derived from https://github.com/microsoft/TestWinRT. The implementation has diverged,
// however because (1) these tests were added in the early phases of development, and (2) the TestWinRT project does not
// cover several scenarios that are interesting to JavaScript.

namespace TestComponent
{
    [contractversion(10)]
    apicontract TestContract {};

    [contract(TestContract, 1)]
    enum TestEnum
    {
        First = 1,
        Second = 2,
        Third = 3,
        Fourth = 4,
    };

    // All of these are represented as a 'number' in JavaScript
    [contract(TestContract, 1)]
    struct NumericTypes
    {
        UInt8 u8;
        UInt16 u16;
        UInt32 u32;
        UInt64 u64;
        Int16 s16;
        Int32 s32;
        Int64 s64;
        Single f32;
        Double f64;
        TestEnum e;

        // TODO: IReference here and elsewhere? Or as its own?
    };

    // All of these are represented as 'string' in JavaScript
    [contract(TestContract, 1)]
    struct StringTypes
    {
        Char ch;
        String str;
        Guid guid;
    };

    // All of these are represented as 'boolean' in JavaScript
    [contract(TestContract, 1)]
    struct BooleanTypes
    {
        Boolean b;
    };

    [contract(TestContract, 1)]
    struct CompositeType
    {
        NumericTypes numerics;
        StringTypes strings;
        BooleanTypes bools;
    };

    // Delegates
    // TODO: Error if argument is named 'value' & has a return value - https://github.com/microsoft/jswinrt/issues/15
    delegate Boolean BoolDelegate(Boolean inputValue);
    delegate Char CharDelegate(Char inputValue);
    delegate Int32 NumericDelegate(Int32 inputValue);
    delegate String StringDelegate(String inputValue);
    delegate Guid GuidDelegate(Guid inputValue);
    delegate TestEnum EnumDelegate(TestEnum inputValue);
    delegate CompositeType CompositeStructDelegate(CompositeType inputValue);
    delegate Windows.Foundation.IReference<Int32> RefDelegate(Windows.Foundation.IReference<Int32> inputValue);
    delegate Windows.Foundation.Collections.IVector<Int32> ObjectDelegate(Windows.Foundation.Collections.IVector<Int32> inputValue);

    // Delegates with out params
    delegate void BoolDelegateWithOutParam(Boolean inputValue, out Boolean outValue);
    delegate void CharDelegateWithOutParam(Char inputValue, out Char outValue);
    delegate void NumericDelegateWithOutParam(Int32 inputValue, out Int32 outValue);
    delegate void StringDelegateWithOutParam(String inputValue, out String outValue);
    delegate void GuidDelegateWithOutParam(Guid inputValue, out Guid outValue);
    delegate void EnumDelegateWithOutParam(TestEnum inputValue, out TestEnum outValue);
    delegate void CompositeStructDelegateWithOutParam(CompositeType inputValue, out CompositeType outValue);
    delegate void RefDelegateWithOutParam(Windows.Foundation.IReference<Int32> inputValue, out Windows.Foundation.IReference<Int32> outValue);
    delegate void ObjectDelegateWithOutParam(Windows.Foundation.Collections.IVector<Int32> inputValue, out Windows.Foundation.Collections.IVector<Int32> outValue);

    [contract(TestContract, 1)]
    runtimeclass Test
    {
        // Constructors
        Test();

        // Infra helpers
        static void LogFailures(String failures);

        // Static properties
        static Boolean StaticBoolProperty;
        // TODO: More, but static properties don't seem to work

        // Static array properties

        // Static functions
        static Boolean StaticOr(Boolean lhs, Boolean rhs);
        static Boolean StaticOrAll(Boolean[] values);
        static Int32 StaticAdd(Int32 lhs, Int32 rhs);
        static Int32 StaticAddAll(Int32[] values);
        static String StaticAppend(String a, Char b, String c);
        static String StaticAppendAll(String[] values);

        // Static out params
        static Boolean StaticBoolOutParam(Boolean lhs, Boolean rhs, out Boolean and, out Boolean or);
        static Char StaticCharOutParam(Char value, out Char next, out Char prev);
        static Int32 StaticNumericOutParam(Int32 value, out Int32 doubledValue, out Int32 tripledValue);
        static String StaticStringOutParam(String value, out String lower, out String upper);
        static Guid StaticGuidOutParam(Guid value, out Guid zero, out Guid allSet);
        static TestEnum StaticEnumOutParam(TestEnum value, out TestEnum plusOne, out TestEnum plusTwo);
        static CompositeType StaticCompositeStructOutParam(CompositeType input, out CompositeType first, out CompositeType second);
        static Windows.Foundation.IReference<Int32> StaticRefOutParam(
            Windows.Foundation.IReference<Int32> value,
            out Windows.Foundation.IReference<Int32> doubledValue,
            out Windows.Foundation.IReference<Int32> tripledValue);
        static Windows.Foundation.Collections.IVector<Int32> StaticObjectOutParam(
            Windows.Foundation.Collections.IVector<Int32> values,
            out Windows.Foundation.Collections.IVector<Int32> doubledValues,
            out Windows.Foundation.Collections.IVector<Int32> tripledValues);

        // Static array out params
        static Boolean[] StaticBoolArrayOutParam(Boolean[] values, out Boolean[] rot1, out Boolean[] rot2);
        static Char[] StaticCharArrayOutParam(Char[] values, out Char[] rot1, out Char[] rot2);
        static Int32[] StaticNumericArrayOutParam(Int32[] values, out Int32[] rot1, out Int32[] rot2);
        static String[] StaticStringArrayOutParam(String[] values, out String[] rot1, out String[] rot2);
        static Guid[] StaticGuidArrayOutParam(Guid[] values, out Guid[] rot1, out Guid[] rot2);
        static TestEnum[] StaticEnumArrayOutParam(TestEnum[] values, out TestEnum[] rot1, out TestEnum[] rot2);
        static CompositeType[] StaticCompositeStructArrayOutParam(CompositeType[] values, out CompositeType[] rot1, out CompositeType[] rot2);
        // TODO: Ref array
        static Windows.Foundation.Collections.IVector<Int32>[] StaticObjectArrayOutParam(
            Windows.Foundation.Collections.IVector<Int32>[] values,
            out Windows.Foundation.Collections.IVector<Int32>[] rot1,
            out Windows.Foundation.Collections.IVector<Int32>[] rot2);

        // Static array fill params
        static void StaticBoolFillParam(ref Boolean[] values);
        static void StaticCharFillParam(ref Char[] values);
        static void StaticNumericFillParam(ref Int32[] values);
        static void StaticStringFillParam(ref String[] values);
        static void StaticGuidFillParam(ref Guid[] values);
        static void StaticEnumFillParam(ref TestEnum[] values);
        static void StaticCompositeStructFillParam(ref CompositeType[] values);
        // TODO: Ref
        static void StaticObjectFillParam(ref Windows.Foundation.Collections.IVector<Int32>[] values);

        // Static events
        static event Windows.Foundation.EventHandler<Boolean> StaticBoolEventHandler;
        static event Windows.Foundation.EventHandler<Char> StaticCharEventHandler;
        static event Windows.Foundation.EventHandler<Int32> StaticNumericEventHandler;
        static event Windows.Foundation.EventHandler<String> StaticStringEventHandler;
        static event Windows.Foundation.EventHandler<Guid> StaticGuidEventHandler;
        static event Windows.Foundation.EventHandler<TestEnum> StaticEnumEventHandler;
        static event Windows.Foundation.EventHandler<CompositeType> StaticCompositeStructEventHandler;
        static event Windows.Foundation.EventHandler<Windows.Foundation.IReference<Int32> > StaticRefEventHandler;
        static event Windows.Foundation.EventHandler<Windows.Foundation.Collections.IVector<Int32> > StaticObjectEventHandler;

        // Static event triggers
        static void RaiseStaticBoolEvent(Boolean value);
        static void RaiseStaticCharEvent(Char value);
        static void RaiseStaticNumericEvent(Int32 value);
        static void RaiseStaticStringEvent(String value);
        static void RaiseStaticGuidEvent(Guid value);
        static void RaiseStaticEnumEvent(TestEnum value);
        static void RaiseStaticCompositeStructEvent(CompositeType value);
        static void RaiseStaticRefEvent(Windows.Foundation.IReference<Int32> value);
        static void RaiseStaticObjectEvent(Windows.Foundation.Collections.IVector<Int32> value);

        // Static delegate invocation
        static Boolean StaticInvokeBoolDelegate(Boolean inputValue, BoolDelegate targetFn);
        static Char StaticInvokeCharDelegate(Char inputValue, CharDelegate targetFn);
        static Int32 StaticInvokeNumericDelegate(Int32 inputValue, NumericDelegate targetFn);
        static String StaticInvokeStringDelegate(String inputValue, StringDelegate targetFn);
        static Guid StaticInvokeGuidDelegate(Guid inputValue, GuidDelegate targetFn);
        static TestEnum StaticInvokeEnumDelegate(TestEnum inputValue, EnumDelegate targetFn);
        static CompositeType StaticInvokeCompositeStructDelegate(CompositeType inputValue, CompositeStructDelegate targetFn);
        static Windows.Foundation.IReference<Int32> StaticInvokeRefDelegate(Windows.Foundation.IReference<Int32> inputValue, RefDelegate targetFn);
        static Windows.Foundation.Collections.IVector<Int32> StaticInvokeObjectDelegate(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegate targetFn);

        /* TODO: Delegates with out params currently cause compilation errors - https://github.com/microsoft/jswinrt/issues/16
        static Boolean StaticInvokeBoolDelegateWithOutParam(Boolean inputValue, BoolDelegateWithOutParam targetFn);
        static Char StaticInvokeCharDelegateWithOutParam(Char inputValue, CharDelegateWithOutParam targetFn);
        static Int32 StaticInvokeNumericDelegateWithOutParam(Int32 inputValue, NumericDelegateWithOutParam targetFn);
        static String StaticInvokeStringDelegateWithOutParam(String inputValue, StringDelegateWithOutParam targetFn);
        static Guid StaticInvokeGuidDelegateWithOutParam(Guid inputValue, GuidDelegateWithOutParam targetFn);
        static TestEnum StaticInvokeEnumDelegateWithOutParam(TestEnum inputValue, EnumDelegateWithOutParam targetFn);
        static CompositeType StaticInvokeCompositeStructDelegateWithOutParam(CompositeType inputValue, CompositeStructDelegateWithOutParam targetFn);
        static Windows.Foundation.IReference<Int32> StaticInvokeRefDelegateWithOutParam(
            Windows.Foundation.IReference<Int32> inputValue,
            RefDelegateWithOutParam targetFn);
        static Windows.Foundation.Collections.IVector<Int32> StaticInvokeObjectDelegateWithOutParam(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegateWithOutParam targetFn);
        */

        // NOTE: Just a helper. Conversion support should ideally be built in
        static Windows.Foundation.Collections.IVector<Int32> MakeNumericVector(Int32[] values);

        // Member properties
        Boolean BoolProperty;
        Char CharProperty;
        UInt8 U8Property;
        UInt16 U16Property;
        UInt32 U32Property;
        UInt64 U64Property;
        Int16 S16Property;
        Int32 S32Property;
        Int64 S64Property;
        Single F32Property;
        Double F64Property;
        String StringProperty;
        Guid GuidProperty;
        TestEnum EnumProperty;
        NumericTypes NumericsStructProperty;
        StringTypes StringsStructProperty;
        BooleanTypes BooleansStructProperty;
        CompositeType CompositeStructProperty;
        Windows.Foundation.IReference<Boolean> RefBooleanProperty;
        Windows.Foundation.IReference<Char> RefCharProperty;
        Windows.Foundation.IReference<Int32> RefNumericProperty;
        Windows.Foundation.IReference<TestEnum> RefEnumProperty;
        Windows.Foundation.Collections.IVector<Int32> ObjectProperty;

        // Member array properties
        Boolean[] BooleanArrayProperty;
        Char[] CharArrayProperty;
        Int32[] NumericArrayProperty;
        String[] StringArrayProperty;
        Guid[] GuidArrayProperty;
        TestEnum[] EnumArrayProperty;
        CompositeType[] CompositeStructArrayProperty;
        // TODO: Causes compilation errors in jswinrt: https://github.com/microsoft/jswinrt/issues/9
        // Windows.Foundation.IReference<Int32>[] RefArrayProperty;
        Windows.Foundation.Collections.IVector<Int32>[] ObjectArrayProperty;

        // Member functions
        Boolean Or(Boolean lhs, Boolean rhs);
        Boolean OrAll(Boolean[] values);
        Int32 Add(Int32 lhs, Int32 rhs);
        Int32 AddAll(Int32[] values);
        String Append(String a, Char b, String c);
        String AppendAll(String[] values);

        // Member out params
        Boolean BoolOutParam(Boolean lhs, Boolean rhs, out Boolean and, out Boolean or);
        Char CharOutParam(Char value, out Char next, out Char prev);
        Int32 NumericOutParam(Int32 value, out Int32 doubledValue, out Int32 tripledValue);
        String StringOutParam(String value, out String lower, out String upper);
        Guid GuidOutParam(Guid value, out Guid zero, out Guid allSet);
        TestEnum EnumOutParam(TestEnum value, out TestEnum plusOne, out TestEnum plusTwo);
        CompositeType CompositeStructOutParam(CompositeType input, out CompositeType first, out CompositeType second);
        Windows.Foundation.IReference<Int32> RefOutParam(
            Windows.Foundation.IReference<Int32> value,
            out Windows.Foundation.IReference<Int32> doubledValue,
            out Windows.Foundation.IReference<Int32> tripledValue);
        Windows.Foundation.Collections.IVector<Int32> ObjectOutParam(
            Windows.Foundation.Collections.IVector<Int32> values,
            out Windows.Foundation.Collections.IVector<Int32> doubledValues,
            out Windows.Foundation.Collections.IVector<Int32> tripledValues);

        // Member array out params
        Boolean[] BoolArrayOutParam(Boolean[] values, out Boolean[] rot1, out Boolean[] rot2);
        Char[] CharArrayOutParam(Char[] values, out Char[] rot1, out Char[] rot2);
        Int32[] NumericArrayOutParam(Int32[] values, out Int32[] rot1, out Int32[] rot2);
        String[] StringArrayOutParam(String[] values, out String[] rot1, out String[] rot2);
        Guid[] GuidArrayOutParam(Guid[] values, out Guid[] rot1, out Guid[] rot2);
        TestEnum[] EnumArrayOutParam(TestEnum[] values, out TestEnum[] rot1, out TestEnum[] rot2);
        CompositeType[] CompositeStructArrayOutParam(CompositeType[] values, out CompositeType[] rot1, out CompositeType[] rot2);
        Windows.Foundation.Collections.IVector<Int32>[] ObjectArrayOutParam(
            Windows.Foundation.Collections.IVector<Int32>[] values,
            out Windows.Foundation.Collections.IVector<Int32>[] rot1,
            out Windows.Foundation.Collections.IVector<Int32>[] rot2);

        // Member array fill params
        void BoolFillParam(ref Boolean[] values);
        void CharFillParam(ref Char[] values);
        void NumericFillParam(ref Int32[] values);
        void StringFillParam(ref String[] values);
        void GuidFillParam(ref Guid[] values);
        void EnumFillParam(ref TestEnum[] values);
        void CompositeStructFillParam(ref CompositeType[] values);
        // TODO: Ref
        void ObjectFillParam(ref Windows.Foundation.Collections.IVector<Int32>[] values);

        // Member events
        event Windows.Foundation.EventHandler<Boolean> BoolEventHandler;
        event Windows.Foundation.EventHandler<Char> CharEventHandler;
        event Windows.Foundation.EventHandler<Int32> NumericEventHandler;
        event Windows.Foundation.EventHandler<String> StringEventHandler;
        event Windows.Foundation.EventHandler<Guid> GuidEventHandler;
        event Windows.Foundation.EventHandler<TestEnum> EnumEventHandler;
        event Windows.Foundation.EventHandler<CompositeType> CompositeStructEventHandler;
        event Windows.Foundation.EventHandler<Windows.Foundation.IReference<Int32> > RefEventHandler;
        event Windows.Foundation.EventHandler<Windows.Foundation.Collections.IVector<Int32> > ObjectEventHandler;

        // Member event triggers
        void RaiseBoolEvent(Boolean value);
        void RaiseCharEvent(Char value);
        void RaiseNumericEvent(Int32 value);
        void RaiseStringEvent(String value);
        void RaiseGuidEvent(Guid value);
        void RaiseEnumEvent(TestEnum value);
        void RaiseCompositeStructEvent(CompositeType value);
        void RaiseRefEvent(Windows.Foundation.IReference<Int32> value);
        void RaiseObjectEvent(Windows.Foundation.Collections.IVector<Int32> value);

        // Member delegate invocation
        Boolean InvokeBoolDelegate(Boolean inputValue, BoolDelegate targetFn);
        Char InvokeCharDelegate(Char inputValue, CharDelegate targetFn);
        Int32 InvokeNumericDelegate(Int32 inputValue, NumericDelegate targetFn);
        String InvokeStringDelegate(String inputValue, StringDelegate targetFn);
        Guid InvokeGuidDelegate(Guid inputValue, GuidDelegate targetFn);
        TestEnum InvokeEnumDelegate(TestEnum inputValue, EnumDelegate targetFn);
        CompositeType InvokeCompositeStructDelegate(CompositeType inputValue, CompositeStructDelegate targetFn);
        Windows.Foundation.IReference<Int32> InvokeRefDelegate(Windows.Foundation.IReference<Int32> inputValue, RefDelegate targetFn);
        Windows.Foundation.Collections.IVector<Int32> InvokeObjectDelegate(
            Windows.Foundation.Collections.IVector<Int32> inputValue,
            ObjectDelegate targetFn);
    }







#if 0
    interface ITests
    {
        /* TODO: Out params on delegates are currently not supported
        void Param1Call(Param1Handler handler);
        void Param2Call(Param2Handler handler);
        void Param3Call(Param3Handler handler);
        void Param4Call(Param4Handler handler);
        void Param5Call(Param5Handler handler);
        void Param6Call(Param6Handler handler);
        void Param7Call(Param7Handler handler);
        void Param8Call(Param8Handler handler);
        void Param9Call(Param9Handler handler);
        void Param10Call(Param10Handler handler);
        void Param11Call(Param11Handler handler);
        void Param12Call(Param12Handler handler);
        void Param13Call(Param13Handler handler);
        void Param14Call(Param14Handler handler);
        void Param15Call(Param15Handler handler);
        */

        /* TODO: For some reason the following cause compilation errors w/ jswinrt
        Boolean[] Array1(Boolean[] a, ref Boolean[] b, out Boolean[] c);
        UInt8[] Array2(UInt8[] a, ref UInt8[] b, out UInt8[] c);
        UInt16[] Array3(UInt16[] a, ref UInt16[] b, out UInt16[] c);
        UInt32[] Array4(UInt32[] a, ref UInt32[] b, out UInt32[] c);
        UInt64[] Array5(UInt64[] a, ref UInt64[] b, out UInt64[] c);
        Int16[] Array6(Int16[] a, ref Int16[] b, out Int16[] c);
        Int32[] Array7(Int32[] a, ref Int32[] b, out Int32[] c);
        Int64[] Array8(Int64[] a, ref Int64[] b, out Int64[] c);
        Single[] Array9(Single[] a, ref Single[] b, out Single[] c);
        Double[] Array10(Double[] a, ref Double[] b, out Double[] c);
        Char[] Array11(Char[] a, ref Char[] b, out Char[] c);
        String[] Array12(String[] a, ref String[] b, out String[] c);
        Blittable[] Array13(Blittable[] a, ref Blittable[] b, out Blittable[] c);
        NonBlittable[] Array14(NonBlittable[] a, ref NonBlittable[] b, out NonBlittable[] c);
        Nested[] Array15(Nested[] a, ref Nested[] b, out Nested[] c);
        Windows.Foundation.IStringable[] Array16(Windows.Foundation.IStringable[] a, ref Windows.Foundation.IStringable[] b, out Windows.Foundation.IStringable[] c);
        */

        /* TODO: Out params on delegates are currently not supported
        void Array1Call(Array1Handler handler);
        void Array2Call(Array2Handler handler);
        void Array3Call(Array3Handler handler);
        void Array4Call(Array4Handler handler);
        void Array5Call(Array5Handler handler);
        void Array6Call(Array6Handler handler);
        void Array7Call(Array7Handler handler);
        void Array8Call(Array8Handler handler);
        void Array9Call(Array9Handler handler);
        void Array10Call(Array10Handler handler);
        void Array11Call(Array11Handler handler);
        void Array12Call(Array12Handler handler);
        void Array13Call(Array13Handler handler);
        void Array14Call(Array14Handler handler);
        void Array15Call(Array15Handler handler);
        void Array16Call(Array16Handler handler);
        */

        /* TODO: Collections support
        Windows.Foundation.Collections.IIterable<String> Collection1(Windows.Foundation.Collections.IIterable<String> a, out Windows.Foundation.Collections.IIterable<String> b);
        Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String> > Collection2(Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String> > a, out Windows.Foundation.Collections.IIterable<Windows.Foundation.Collections.IKeyValuePair<String, String> > b);
        Windows.Foundation.Collections.IMap<String, String> Collection3(Windows.Foundation.Collections.IMap<String, String> a, out Windows.Foundation.Collections.IMap<String, String> b);
        Windows.Foundation.Collections.IMapView<String, String> Collection4(Windows.Foundation.Collections.IMapView<String, String> a, out Windows.Foundation.Collections.IMapView<String, String> b);
        Windows.Foundation.Collections.IVector<String> Collection5(Windows.Foundation.Collections.IVector<String> a, out Windows.Foundation.Collections.IVector<String> b);
        Windows.Foundation.Collections.IVectorView<String> Collection6(Windows.Foundation.Collections.IVectorView<String> a, out Windows.Foundation.Collections.IVectorView<String> b);

        void Collection1Call(Collection1Handler handler);
        void Collection2Call(Collection2Handler handler);
        void Collection3Call(Collection3Handler handler);
        void Collection4Call(Collection4Handler handler);
        void Collection5Call(Collection5Handler handler);
        void Collection6Call(Collection6Handler handler);
        */

        /* TODO: The following require that we have an IAsyncAction in hand
        Windows.Foundation.IAsyncAction Async1(Windows.Foundation.IAsyncAction suspend, Boolean fail);
        Windows.Foundation.IAsyncActionWithProgress<Int32> Async2(Windows.Foundation.IAsyncAction suspend, Boolean fail, Int32 progress);
        Windows.Foundation.IAsyncOperation<Int32> Async3(Windows.Foundation.IAsyncAction suspend, Boolean fail, Int32 result);
        Windows.Foundation.IAsyncOperationWithProgress<Int32, Int32> Async4(Windows.Foundation.IAsyncAction suspend, Boolean fail, Int32 result, Int32 progress);

        void Async1Call(Async1Handler handler);
        void Async2Call(Async2Handler handler);
        void Async3Call(Async3Handler handler);
        void Async4Call(Async4Handler handler);
        */
    }
#endif
}
